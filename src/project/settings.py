"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from datetime import timedelta
from pathlib import Path
from dotenv import load_dotenv
from corsheaders.defaults import default_headers

# Load environment variables from .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.abspath(os.getenv('BASE_DIR', '.'))

PROJ_DIR = os.path.dirname(__file__)
SRC_DIR = os.path.dirname(PROJ_DIR)


ENV = os.getenv('ENV')

# for custom user model
AUTH_USER_MODEL = "users.User"


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-1j+k@pc!u9s6sxa)i-ys18!sgw6z^yf$hi422+)4enjnd5#987'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'project',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'django_extensions',
    'rest_framework',
    'rangefilter',
    'drf_yasg',
    'huey.contrib.djhuey',
    # project apps
    'apps.users',
    'apps.policy',
    'apps.claims',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'src', 'project', 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# CORS config
ORS_ALLOW_ALL_ORIGINS = os.getenv('CORS_ALLOW_ALL_ORIGINS', False)
CORS_ALLOWED_ORIGINS = os.getenv('CORS_ALLOWED_ORIGINS', [])
CORS_ALLOW_HEADERS = list(default_headers) + [
    'authorization',
]


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
DB_NAME = os.getenv("DB_NAME", default="travelsure")
DB_DEFAULT_ENGINE = 'django.db.backends.postgresql'
DB_HOST = os.getenv('DB_HOST', default='localhost')
DB_PORT = os.getenv('DB_PORT', default='5432')
DB_USER = os.getenv('DB_USER', default='')
DB_PASSWORD = os.getenv('DB_PASSWORD', default='')

DATABASES = {
    'default': {
        'ENGINE': DB_DEFAULT_ENGINE,
        'NAME': DB_NAME,
        'HOST': DB_HOST,
        'PORT': DB_PORT,
    }
}

# DRF Settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
}


ACCESS_TOKEN_LIFETIME = os.getenv('ACCESS_TOKEN_LIFETIME', default=30)
REFRESH_TOKEN_LIFETIME = os.getenv('REFRESH_TOKEN_LIFETIME', default=1)
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=ACCESS_TOKEN_LIFETIME),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=REFRESH_TOKEN_LIFETIME),
    'AUTH_HEADER_TYPES': ('Bearer',),
}


SWAGGER_SETTINGS = {
    'USE_SESSION_AUTH': False,  # Disable session auth (can be enabled for specific use cases)
    'DEFAULT_AUTO_SCHEMA_CLASS': 'apps.autoschema.AutoSchema',
    'SECURITY_DEFINITIONS': {
        'basic': {
            'type': 'basic',
            'description': 'Basic Authentication'
        }
    },
}



# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {'min_length': 8},
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# email backend settings
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Huey
HUEY_IMMEDIATE = os.getenv('HUEY_IMMEDIATE', default=False)  # Set to True for testing without running worker
HUEY = {
    'name': 'travelsure',
    'immediate': HUEY_IMMEDIATE,
    'connection': {'host': 'localhost', 'port': 6379},
    'consumer': {
        'workers': 1,
        'periodic': True,
        'scheduler_interval': 1,
        'loglevel': 'INFO',
    },
}
